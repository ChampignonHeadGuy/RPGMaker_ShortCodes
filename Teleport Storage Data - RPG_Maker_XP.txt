#==============================================================================
# ** Game_Teleports
#------------------------------------------------------------------------------
#  This class handles teleport parameters. I t's a wrapper for the 
#  built-in class "Array". Refer to "$teleports" for the instance 
#  of this class.
#------------------------------------------------------------------------------
#  Push any array with parameters(id, x, y, direction) to save like slot.
#    method : $teleports[index] = [1, 9, 7, 0]
#    Use active[true] to start teleport process.
#==============================================================================

class Game_Teleports
  #--------------------------------------------------------------------------
  # * Public Instance Variables
  #--------------------------------------------------------------------------
  attr_reader   :active           # active teleport flag
  attr_reader   :map_index        # map index to teleport
  #--------------------------------------------------------------------------
  # * Object Initialization
  #--------------------------------------------------------------------------
  def initialize
    @data = []
    @active = false
    @map_index = 0
  end
  #--------------------------------------------------------------------------
  # * Active Teleport Flag
  #     active : active teleport process (flag)
  #--------------------------------------------------------------------------
  def active=active
    active != true ? @active = false : @active = true
  end
  #--------------------------------------------------------------------------
  # * Set Teleport Destination Index
  #     index : data index (not map_id)
  #--------------------------------------------------------------------------
  def map_index=index
    if index.is_a?(Numeric) and index.between?(0, 100)
      @map_index = index.to_i
    end
  end
  #--------------------------------------------------------------------------
  # * Get Data Size
  #--------------------------------------------------------------------------
  def size
    return @data.size
  end
  #--------------------------------------------------------------------------
  # * Get Data Length
  #--------------------------------------------------------------------------
  def length
    return @data.length
  end
  #--------------------------------------------------------------------------
  # * Clear (erase all elements of data)
  #--------------------------------------------------------------------------
  def clear
    @data.clear
  end
  #--------------------------------------------------------------------------
  # * Name (get name by map_index)
  #--------------------------------------------------------------------------
  def name
    if @data[@map_index] != nil
      return @data[@map_index].name
    end
    return ""
  end
  #--------------------------------------------------------------------------
  # * Get Teleport
  #     teleport_id : teleport ID
  #--------------------------------------------------------------------------
  def [](teleport_id)
    if teleport_id < 0 or teleport_id > 100
      return nil
    end
    if @data[teleport_id] == nil
      @data[teleport_id] = Teleport_data.new
    end
    return @data[teleport_id]
  end
  #--------------------------------------------------------------------------
  # * Set Teleport
  #     teleport_id : teleport ID
  #     array       : the teleport's array (id, x, y, direction)
  #--------------------------------------------------------------------------
  def []=(teleport_id, array)
    return if not teleport_id.between(0, 100)
    if teleport_id <= 100 and @data[teleport_id] == nil
      @data[teleport_id] = Teleport_data.new
    end
    if array.is_a?(Array) and @data[teleport_id] != nil
      @data[teleport_id].setup(array[0], array[1], array[2], array[3])
    end
  end
  #--------------------------------------------------------------------------
  # * Refresh (one of teleport ids)
  #     teleport_id : teleport ID
  #--------------------------------------------------------------------------
  def flush_one(teleport_id)
    if teleport_id <= 100 and @data[teleport_id] != nil
      @data[teleport_id].setup(0, 0, 0, 0)
    end
  end
end

#==============================================================================
# ** Teleport_data
#------------------------------------------------------------------------------
#  This class perform to memorize teleport data. It's used within the 
#  Game_Teleports class ($teleports).
#==============================================================================

class Teleport_data
  #--------------------------------------------------------------------------
  # * Public Instance Variables
  #--------------------------------------------------------------------------
  attr_reader   :id               # map id
  attr_reader   :x                # x coordinate
  attr_reader   :y                # y coordinate
  attr_reader   :dir              # initial direction
  attr_reader   :name             # map name
  attr_reader   :trans_name       # graphics transition
  attr_reader   :trans_time       # transition time
  #--------------------------------------------------------------------------
  # * Object Initialization
  #--------------------------------------------------------------------------
  def initialize
    @trans_name = ""
    @trans_time = 0
    clear
  end
  #--------------------------------------------------------------------------
  # * Clear to Setup New Data
  #--------------------------------------------------------------------------
  def clear
    @id = 0
    @x = 0
    @y = 0
    @dir = 0
    @name = ""
  end
  #--------------------------------------------------------------------------
  # * Setup Map Data
  #     id  : map ID
  #     x   : x coordinate
  #     y   : y coordinate
  #     dir : initial direction after teleport
  #--------------------------------------------------------------------------
  def setup(id, x, y, dir)
    clear
    # Check all input variables
    id.is_a?(Numeric)  ? @id = id   : nil
    x.is_a?(Numeric)   ? @x = x     : nil
    y.is_a?(Numeric)   ? @y = y     : nil
    dir.is_a?(Numeric) ? @dir = dir : nil
    # Get map information to fix x and y coordinates
    temp1 = load_data(sprintf("Data/Map%03d.rxdata", id))
    temp2 = load_data("Data/MapInfos.rxdata")[id]
    if temp1 != nil
      @x %= temp1.width
      @y %= temp1.height
    end
    @x = Integer(@x.abs)
    @y = Integer(@y.abs)
    @name = temp2 != nil ? temp2.name : ""
  end
  #--------------------------------------------------------------------------
  # * Set Default Graphics Transition
  #--------------------------------------------------------------------------
  def default_transition
    @trans_name = $game_temp.transition_name
    @trans_time = 0
  end
  #--------------------------------------------------------------------------
  # * Set Pattern Graphics Transition
  #     name : graphics transition name
  #     time : graphics transition duration
  #--------------------------------------------------------------------------
  def transition(name, time)
    @trans_name = name
    @trans_time = time
  end
  #--------------------------------------------------------------------------
  # * Start place (if $teleport[ID] memorize start game map)
  #--------------------------------------------------------------------------
  def start_place
    @id = $data_system.start_map_id
    @x = $data_system.start_x
    @y = $data_system.start_y
    @dir = 0
    temp = load_data("Data/MapInfos.rxdata")[@id]
    @name = temp != nil ? temp.name : ""
  end
  #--------------------------------------------------------------------------
  # * Set Map Coordinates
  #     x : x coordinate
  #     y : y coordinate
  #--------------------------------------------------------------------------
  def set_coordinates(x, y)
    x.is_a?(Numeric) ? @x = x : nil
    y.is_a?(Numeric) ? @y = y : nil
    @x = Integer(@x.abs % 256)
    @y = Integer(@y.abs % 256)
  end
  #--------------------------------------------------------------------------
  # * Set Map ID
  #     id : map ID
  #--------------------------------------------------------------------------
  def set_id(id)
    id.is_a?(Numeric) ? @id = id : nil
    @name = ""
    temp = load_data("Data/MapInfos.rxdata")[id]
    @name = temp != nil ? temp.name : ""
  end
end

#==============================================================================
# ** Scene_Title
#------------------------------------------------------------------------------
#  This class perform title screem processing.
#==============================================================================

class Scene_Title
  #--------------------------------------------------------------------------
  # * Object Initialization
  #--------------------------------------------------------------------------
  def initialize
    # Make Teleport Object
    if $teleports == nil
      $teleports = Game_Teleports.new
    end
  end
end
